/*
 * SHORT DESCRIPTION
 */

/*
 * STRUCTURE
 */

Main courses:
* mathematics:
	- discrete mathematics;
	- linear algebra & analytic geometry;
* algorithms & data structures;
* electronics;
* computer architecture:
	- digital design;
	- microarchitecture;
	- instruction set architecture;
	- x86 (16-, 32-, 64-bit) architecture & assembly language;
* operating systems:
	- os theory;
	- kernel programming;
* networks;
* parallel & distributed systems;
* translators & linkers;
* C programming.

Additional courses:
* mathematics:
	- calculus;
	- mathematical optimizations;
* Lisp programming;
* UNIX environment.

/*
 * RESEARCH
 */

Passing all courses requires creating all of the projects listed below:
* monolithic UNIX-like kernel (see ygg);
* microkernel;
* exokernel;
* TCP/IP stack;
* CPU (digital design, microarchitecture, ISA);
* C compiler for x86;
* new language for system programming;
* programming editor (C + Lisp).

Also an article must be written for each of them.
